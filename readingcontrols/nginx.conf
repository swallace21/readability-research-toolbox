# upstream app_server {
#     # if flask is in a container: app, else: host.docker.internal
#     #server backend:5001;
#     server host.docker.internal:5001;
# }

map $http_user_agent $not_health {
"ELB-HealthChecker/1.0" 0;
default 1;
}

server {
    listen ${PORT};
    #ssl_certificate /etc/nginx/ssl/cert.pem;
    #ssl_certificate_key /etc/nginx/ssl/key.pem;
    server_name _;
    charset utf-8;
    # error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log combined if=$not_health;
    client_max_body_size 10M;

    if ($http_x_forwarded_proto = 'http') {
        return 301 https://$host$request_uri;
    }

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }

    # error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

#     location /api  {
#         gzip_static on;
#
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header Host $host;
#         proxy_buffering off;
#         proxy_redirect off;
#         proxy_pass http://app_server;
#         proxy_connect_timeout 600;
#         proxy_send_timeout 600;
#         proxy_read_timeout 600;
#         send_timeout 600;
#     }

}
